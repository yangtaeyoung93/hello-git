import java.util.*;
class Point{
	public int x,y;
	Point(int x, int y){
		this.x = x;
		this.y = y;
	}
}
class Main {
	static int n,m;
	static int[] dx= {1,0,-1,0};
	static int[] dy= {0,1,0,-1};
	static int[][] arr,dis;
	static int answer = 0;
	public void BFS(int x,int y) {
		Queue<Point> queue = new LinkedList<Point>();
		queue.offer(new Point(x, y));
		while(!queue.isEmpty()) {
			Point tmp = queue.poll();
			for(int i=0; i<4; i++) {
				int nx = tmp.x + dx[i];
				int ny = tmp.y + dy[i];
				if(nx > 0 && nx < 8 && ny > 0 && ny < 8 && arr[nx][ny] == 0) {
					arr[nx][ny] = 1;
					queue.offer(new Point(nx,ny));
					dis[nx][ny] = dis[tmp.x][tmp.y] + 1;
				}
			}
		}
	}
	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		arr = new int[8][8];
		dis = new int[8][8];
		for(int i=1;i<8;i++) {
			for(int j=1;j<8;j++) {
				arr[i][j] = kb.nextInt();
			}
		}
		T.BFS(1, 1);
		if(dis[7][7] == 0) System.out.println(-1);
		else {
			System.out.println(dis[7][7]);
		}
	}
}
