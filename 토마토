import java.util.*;
class Point{
	public int x,y;
	Point(int x, int y){
		this.x = x;
		this.y = y;
	}
}
class Main {
	static int n,m;
	static int[] dx= {1,0,-1,0};
	static int[] dy= {0,1,0,-1};
	static int[][] arr,dis;
	static int answer = 0;
	static Queue<Point> queue = new LinkedList<Point>();
	public void BFS() {
		while(!queue.isEmpty()) {
			Point tmp = queue.poll();
			for(int i=0; i<4; i++) {
				int nx = tmp.x + dx[i];
				int ny = tmp.y + dy[i];
				if(nx >= 0 && nx < m && ny >= 0 && ny < n && arr[nx][ny] == 0) {
					arr[nx][ny] = 1;
					queue.offer(new Point(nx,ny));
					dis[nx][ny] = dis[tmp.x][tmp.y] + 1;
				}
			}
		}
	}
	public static void main(String[] args){
		Main T = new Main();
		Scanner kb = new Scanner(System.in);
		n = kb.nextInt();
		m = kb.nextInt();
		arr = new int[m][n];
		dis = new int[m][n];
		for(int i=0;i<m;i++) {
			for(int j=0;j<n;j++) {
				arr[i][j] = kb.nextInt();
				if(arr[i][j] == 1) queue.offer(new Point(i,j));
			}
		}
		T.BFS();
		boolean flag = true;
		int answer = Integer.MIN_VALUE;
		for(int i=0; i<m; i++) {
			for(int j=0; j<n; j++) {
				if(arr[i][j] == 0) flag = false;
			}
		}
		if(flag) {
			for(int i=0; i<m; i++) {
				for(int j=0; j<n; j++) {
					answer = Math.max(answer, dis[i][j]);
				}
			}
			System.out.println(answer);
		}else {
			System.out.println(-1);
		}
	}
}
