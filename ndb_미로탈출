import java.util.*;
class Point {
	public int x,y;
	Point(int x , int y){
		this.x = x;
		this.y = y;
	}
}
public class Main {
	static int[][] arr,dis;
	int[] dx = {1,0,0,-1};
	int[] dy = {0,1,-1,0};
	static int n,m;
	public void BFS(int x, int y) {
		Queue<Point> q = new LinkedList<Point>();
		q.offer(new Point(x, y));
		while(!q.isEmpty()) {
			Point tmp = q.poll();
			for(int i=0; i<4; i++) {
				int nx = tmp.x + dx[i];
				int ny = tmp.y + dy[i];
				if(nx >= 0 && nx < n && ny >=0 && ny < m && arr[nx][ny] == 1) {
					arr[nx][ny] = 0;
					q.offer(new Point(nx, ny));
					dis[nx][ny] = dis[tmp.x][tmp.y] + 1;
				}
			}
		}
	}
	public static void main(String[] args) {
		Main T = new Main();
		Scanner sc = new Scanner(System.in);
		 n = sc.nextInt();
		 m = sc.nextInt();
		arr= new int[n][m];
		dis= new int[n][m];
		for(int i=0; i<n; i++) {
			for(int j=0; j<m;j++) {
				arr[i][j] = sc.nextInt();
			}
		}
		dis[0][0] = 1;
		T.BFS(0,0);
		System.out.println(dis[n-1][m-1]);
	}
}
