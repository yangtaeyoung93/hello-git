package ndb;

import java.util.*;
public class Main {
	static int[][] graph;
	static int n,m,d;
	public int DFS(int x, int y) {
		int [] dx = {0,0,0,0};
		int [] dy = {0,0,0,0};
		int cnt = 1;
		if(d == 0) {
			dx[0] = -1;
			dx[2] = 1;
			dy[1] = 1;
			dy[3] = -1;
		}else if(d == 1) {
			dx[1] = -1;
			dx[3] = -1;
			dy[0] = -1;
			dy[2] = 1;
		}else if(d == 2) {
			dx[0] = 1;
			dx[2] = -1;
			dy[1] = -1;
			dy[3] = 1;
		}else if(d == 3) {
			dx[1] = 1;
			dx[3] = -1;
			dy[0] = 1;
			dy[2] = -1;
		}
	
		for(int i=0; i<4; i++){
			int nx = x +dx[i];
			int ny = y + dy[i];
			if(nx>=0 && nx < n && ny >=0 && ny < m && graph[nx][ny] == 0) {
				graph[nx][ny] = 1;
				x = nx;
				y = ny;
				cnt++;
			}
		}
		return cnt;
	}
	public static void main(String[] args) {
		Main T = new Main();
		Scanner sc = new Scanner(System.in);
		 n = sc.nextInt();
		 m = sc.nextInt();
		graph = new int[n+1][m+1];
		int x = sc.nextInt();
		int y = sc.nextInt();
		d = sc.nextInt();
		for(int i=0; i<n;i++) {
			for(int j=0; j<m; j++) {
				graph[i][j] = sc.nextInt();
			}
		}
		graph[x][y] = 1;
		System.out.println(	T.DFS(x, y));
	}
}
