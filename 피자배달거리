mport java.util.*;
class Point {
	public int x,y;
	Point(int x , int y){
		this.x = x;
		this.y = y;
	}
}
public class Main {
	static int[] combi,dis;
	static int n,m,len,answer = Integer.MAX_VALUE;
	static ArrayList<Point> hs, pz;
	public void DFS(int L, int s) {
		if(L == m) {
			int sum = 0; // 조합에서 도시의 피자 배달거리
			for(Point h : hs) {
				int dis =Integer.MAX_VALUE;
				for(int i : combi) {
					dis = Math.min(dis, Math.abs(h.x - pz.get(i).x) + Math.abs(h.y - pz.get(i).y));
				}
				sum+=dis;
			}
			answer = Math.min(answer, sum);
		}else {
			for(int i=s; i<=len; i++) {
				combi[L] = i;
				DFS(L+1,i+1);
			}
		}
	}
	public static void main(String[] args) {
		Main T = new Main();
		Scanner sc = new Scanner(System.in);
		 n = sc.nextInt();
		 m = sc.nextInt();
		 hs = new ArrayList<>();
		 pz = new ArrayList<>();
		 for(int i=0; i<n; i++) {
			 for(int j=0; j<m; j++) {
				 int tmp = sc.nextInt();
				 if(tmp == 1) hs.add(new Point(i,j));
				 else if( tmp == 2) pz.add(new Point(i,j));
			 }
		 }
		 len = pz.size();//피자집의 갯수
		 combi = new int [m];
		 T.DFS(0, 0);
		 System.out.println(answer);
	}
}
