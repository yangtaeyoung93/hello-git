package ndb;

import java.util.*;
public class Main {
	static int n,m,answer=0;
	public void DFS(int x, int y, int[][] graph) {
		int[] dx = {-1,0,1,0};
		int[] dy = {0,-1,0,1};
		for(int i=0; i<4; i++) {
			int nx = x+dx[i];
			int ny = y+dy[i];
			if(nx >= 0 && nx < n && ny >= 0 && ny < m && graph[nx][ny] == 0) {
				graph[nx][ny] = 1;
				DFS(nx,ny,graph);
			}
		}
	}
	public void solution(int[][] graph) {
		for(int i=0; i<n; i++) {
			for(int j=0;j<m;j++) {
				if(graph[i][j] == 0) {
					answer++;
					graph[i][j] = 1;
					DFS(i,j,graph);
				}
			}
		}
	}
	public static void main(String[] args) {
		Main T = new Main();
		Scanner sc = new Scanner(System.in);
		n = sc.nextInt();
		m = sc.nextInt();
		int[][] graph = new int[n][m];
		for(int i=0; i<n;i++) {
			for(int j=0;j<m;j++) {
				graph[i][j] = sc.nextInt();
			}
		}
			T.solution(graph);
			System.out.println(answer);
	}
}
